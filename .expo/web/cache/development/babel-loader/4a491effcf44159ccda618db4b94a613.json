{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\bb\\\\Documents\\\\My projects\\\\budget-monitor\\\\AccountMoreDetails.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport style from \"./styles\";\nimport { LineChart } from 'react-native-chart-kit';\n\nvar AccountMoreDetails = function (_React$Component) {\n  _inherits(AccountMoreDetails, _React$Component);\n\n  var _super = _createSuper(AccountMoreDetails);\n\n  function AccountMoreDetails() {\n    _classCallCheck(this, AccountMoreDetails);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AccountMoreDetails, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 13\n        }\n      }, React.createElement(LineChart, {\n        data: {\n          labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n          datasets: [{\n            data: [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n          }]\n        },\n        width: Dimensions.get(\"window\").width,\n        height: 220,\n        yAxisLabel: \"$\",\n        yAxisSuffix: \"k\",\n        yAxisInterval: 1,\n        chartConfig: {\n          backgroundColor: \"#e26a00\",\n          backgroundGradientFrom: \"#fb8c00\",\n          backgroundGradientTo: \"#ffa726\",\n          decimalPlaces: 2,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(255, 255, 255, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(255, 255, 255, \" + opacity + \")\";\n          },\n          style: {\n            borderRadius: 16\n          },\n          propsForDots: {\n            r: \"6\",\n            strokeWidth: \"2\",\n            stroke: \"#ffa726\"\n          }\n        },\n        bezier: true,\n        style: {\n          marginVertical: 8,\n          borderRadius: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return AccountMoreDetails;\n}(React.Component);\n\nexport { AccountMoreDetails as default };","map":{"version":3,"sources":["C:/Users/bb/Documents/My projects/budget-monitor/AccountMoreDetails.js"],"names":["React","style","LineChart","AccountMoreDetails","container","labels","datasets","data","Math","random","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","borderRadius","propsForDots","r","strokeWidth","stroke","marginVertical","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,KAAP;AACA,SAASC,SAAT,QAA0B,wBAA1B;;IACqBC,kB;;;;;;;;;;;;;6BACR;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,KAAK,CAACG,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,IAAI,EAAE;AACFC,UAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,CADN;AAEFC,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,IAAI,EAAE,CACFC,IAAI,CAACC,MAAL,KAAgB,GADd,EAEFD,IAAI,CAACC,MAAL,KAAgB,GAFd,EAGFD,IAAI,CAACC,MAAL,KAAgB,GAHd,EAIFD,IAAI,CAACC,MAAL,KAAgB,GAJd,EAKFD,IAAI,CAACC,MAAL,KAAgB,GALd,EAMFD,IAAI,CAACC,MAAL,KAAgB,GANd;AADV,WADM;AAFR,SADV;AAgBI,QAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAhBpC;AAiBI,QAAA,MAAM,EAAE,GAjBZ;AAkBI,QAAA,UAAU,EAAC,GAlBf;AAmBI,QAAA,WAAW,EAAC,GAnBhB;AAoBI,QAAA,aAAa,EAAE,CApBnB;AAqBI,QAAA,WAAW,EAAE;AACTC,UAAAA,eAAe,EAAE,SADR;AAETC,UAAAA,sBAAsB,EAAE,SAFf;AAGTC,UAAAA,oBAAoB,EAAE,SAHb;AAITC,UAAAA,aAAa,EAAE,CAJN;AAKTC,UAAAA,KAAK,EAAE;AAAA,gBAACC,OAAD,uEAAW,CAAX;AAAA,4CAAwCA,OAAxC;AAAA,WALE;AAMTC,UAAAA,UAAU,EAAE;AAAA,gBAACD,OAAD,uEAAW,CAAX;AAAA,4CAAwCA,OAAxC;AAAA,WANH;AAOTjB,UAAAA,KAAK,EAAE;AACHmB,YAAAA,YAAY,EAAE;AADX,WAPE;AAUTC,UAAAA,YAAY,EAAE;AACVC,YAAAA,CAAC,EAAE,GADO;AAEVC,YAAAA,WAAW,EAAE,GAFH;AAGVC,YAAAA,MAAM,EAAE;AAHE;AAVL,SArBjB;AAqCI,QAAA,MAAM,MArCV;AAsCI,QAAA,KAAK,EAAE;AACHC,UAAAA,cAAc,EAAE,CADb;AAEHL,UAAAA,YAAY,EAAE;AAFX,SAtCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AA+CH;;;;EAjD2CpB,KAAK,CAAC0B,S;;SAAjCvB,kB","sourcesContent":["import React from 'react';\r\nimport { View } from 'react-native';\r\nimport style from './styles';\r\nimport { LineChart } from 'react-native-chart-kit';\r\nexport default class AccountMoreDetails extends React.Component {\r\n    render() {\r\n        return (\r\n            <View style={style.container}>\r\n                <LineChart\r\n                    data={{\r\n                        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n                        datasets: [\r\n                            {\r\n                                data: [\r\n                                    Math.random() * 100,\r\n                                    Math.random() * 100,\r\n                                    Math.random() * 100,\r\n                                    Math.random() * 100,\r\n                                    Math.random() * 100,\r\n                                    Math.random() * 100\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }}\r\n                    width={Dimensions.get(\"window\").width} // from react-native\r\n                    height={220}\r\n                    yAxisLabel=\"$\"\r\n                    yAxisSuffix=\"k\"\r\n                    yAxisInterval={1} // optional, defaults to 1\r\n                    chartConfig={{\r\n                        backgroundColor: \"#e26a00\",\r\n                        backgroundGradientFrom: \"#fb8c00\",\r\n                        backgroundGradientTo: \"#ffa726\",\r\n                        decimalPlaces: 2, // optional, defaults to 2dp\r\n                        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                        labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                        style: {\r\n                            borderRadius: 16\r\n                        },\r\n                        propsForDots: {\r\n                            r: \"6\",\r\n                            strokeWidth: \"2\",\r\n                            stroke: \"#ffa726\"\r\n                        }\r\n                    }}\r\n                    bezier\r\n                    style={{\r\n                        marginVertical: 8,\r\n                        borderRadius: 16\r\n                    }}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}